#! /bin/bash

set -euo pipefail

. ~/.local/lib/log.sh

ask_yes_no() {
    local resp default

    prompt="${1}"
    default="${2:-n}"

    printf "\\e[36m[PROMPT]\\e[0m  %s" "${prompt} " >&2

    read -r -n1 -s resp;
    echo "${resp:-${default}}"

    resp=$(echo "${resp:-${default}}" | tr '[:upper:]' '[:lower:]' | xargs)

    if [[ "${resp}" = "y" ]]; then
        return 0
    else
        return 1
    fi
}

is_installed() {
    command -v "${1:?}" &>/dev/null
}

install_cmus_notify() {
    if ! is_installed cargo; then
        warning "$0: cargo not installed: skipping"
        return
    fi

    if ask_yes_no "Install cmus-notify [y/N]?" "n"; then
        cargo install --root ~/.local --git https://github.com/mathieu-lemay/cmus-notify --force
    fi
}

build_bat_cache() {
    if ! is_installed bat; then
        warning "$0: bat not installed: skipping"
        return
    fi

    info "Building bat cache"
    bat cache --build > /dev/null
}

compile_terminfo_entries() {
    if ! is_installed tic; then
        warning "$0: tic not installed: skipping"
        return
    fi

    for file in "{{ .chezmoi.sourceDir }}"/terminfo/*; do
        tic "${file}"
    done
}

generate_completions() {
    if is_installed poetry; then
        info "$0: generating completion for poetry"
        poetry completions zsh > ~/.local/share/zsh/compl/_poetry
    fi
{{- if eq .chezmoi.os "darwin" }}

    for app in "chezmoi" "docker" "kubectl"; do
        if is_installed "${app}"; then
            info "$0: generating completion for ${app}"
            "${app}" completion zsh > "${HOME}/.local/share/zsh/compl/_${app}"
        fi
    done
{{- end }}
}

apply_dconf_config() {
    if ! is_installed dconf; then
        warning "$0: dconf not installed: skipping"
        return
    fi

    dconf load / < "{{ .chezmoi.sourceDir }}/dconf.dump"

    # TODO: Add org.gnome.shell.extensions.dash-to-dock
}

sync_library_fonts() {
    info "Syncing ~/.local/share/fonts to ~/Library/Fonts"
    rsync -a --delete ~/.local/share/fonts/ Library/Fonts
}

load_setenv_agent() {
    info "Loading setenv agent"
    if launchctl list | grep org.acidrain.setenv &>/dev/null; then
        launchctl unload ~/Library/LaunchAgents/org.acidrain.setenv.plist
    fi
    launchctl load ~/Library/LaunchAgents/org.acidrain.setenv.plist
}

install_cmus_notify
build_bat_cache
compile_terminfo_entries
generate_completions
{{- if eq .chezmoi.os "linux" }}
apply_dconf_config
{{- else if eq .chezmoi.os "darwin" }}
sync_library_fonts
load_setenv_agent
warning "Disable Mission Control keyboard shortcuts for ctrl+left and ctrl+right"
{{- end }}

{{- if eq .signingkey "" }}
warning "No GPG signing key set: git commit signature disabled"
{{- end }}

# vi: ft=sh
