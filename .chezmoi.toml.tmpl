{{- $email := promptStringOnce . "email" "Email Address" "acidrain1@gmail.com" -}}
{{- $signingkey := promptStringOnce . "signingkey" "GPG Signing Key" "" -}}
{{- $makejobs := promptIntOnce . "makejobs" "Number of Parallel Make Jobs" 4 -}}
{{- $nvim_enable_coc := promptBoolOnce . "nvim_enable_coc" "Enable coc.nvim" true -}}
{{- $githubOrgsForceSSH := promptStringOnce . "githubOrgsForceSSH" "GitHub Organizations for which to force SSH (comma separated)" "" -}}

{{- $setupPrivateGit := promptBoolOnce . "setupPrivateGit" "Add private git config" false -}}
{{- $privateGitName := "" -}}
{{- $privateGitEmail := "" -}}
{{- $privateGitSigningKey := "" -}}

{{- if eq $setupPrivateGit true -}}
{{- $privateGitEmail = promptStringOnce . "privateGit.email" "Private Git Email Address" "acidrain1@gmail.com" -}}
{{- $privateGitSigningKey = promptStringOnce . "privateGit.signingKey" "Private Git GPG Signing Key" "" -}}
{{- end -}}

{{- $homebrewPrefix := "" -}}
{{- if eq .chezmoi.os "darwin" -}}
{{-   $homebrewPrefix = promptStringOnce . "homebrewPrefix" "Homebrew prefix" "/opt/homebrew" -}}
{{- end -}}

{{- $cloudProviders := list "none" "aws" "gcloud" -}}
{{- $defaultCloudProvider := promptChoiceOnce . "defaultCloudProvider" "Default cloud provider" $cloudProviders "none" -}}

{{- $osid := .chezmoi.os -}}
{{- if ne .chezmoi.osRelease nil -}}
{{-   if hasKey .chezmoi.osRelease "idLike" -}}
{{-     $osid = printf "%s-%s" .chezmoi.os .chezmoi.osRelease.idLike -}}
{{-   else if hasKey .chezmoi.osRelease "id" -}}
{{-     $osid = printf "%s-%s" .chezmoi.os .chezmoi.osRelease.id -}}
{{-   end -}}
{{- end -}}

{{- $chassisType := "desktop" }}
{{- if eq .chezmoi.os "darwin" }}
{{- $model := (output "sysctl" "-n" "hw.model") }}
{{-   if contains "MacBook" $model }}
{{-     $chassisType = "laptop" }}
{{-   else if contains "VirtualMac" $model }}
{{-     $chassisType = "vm" }}
{{-   else }}
{{-     $chassisType = "desktop" }}
{{-   end }}
{{- else if and (eq .chezmoi.os "linux") (ne (lookPath "hostnamectl") "") }}
{{-   $chassisType = (output "hostnamectl" "--json=short" | mustFromJson).Chassis }}
{{- end -}}

[diff]
exclude = ["scripts"]

[data]
email = {{ $email | quote }}
signingkey = {{ $signingkey | quote }}
makejobs = {{ $makejobs }}
nvim_enable_coc = {{ $nvim_enable_coc }}
githubOrgsForceSSH = {{ $githubOrgsForceSSH | quote }}
osid = {{ $osid | quote }}
setupPrivateGit = {{ $setupPrivateGit }}
{{- if eq .chezmoi.os "darwin" }}
homebrewPrefix = {{ $homebrewPrefix | quote }}
{{- end }}
chassisType = {{ $chassisType | quote }}
defaultCloudProvider = {{ $defaultCloudProvider | quote }}

{{- if eq $setupPrivateGit true }}

[data.privateGit]
email = {{ $privateGitEmail | quote }}
signingKey = {{ $privateGitSigningKey | quote }}
{{- end }}

[data.command]
{{- if eq .chezmoi.os "darwin" }}
clip = "pbcopy"
xargs = "xargs"
{{- else }}
clip = "xsel --clipboard"
xargs = "xargs -r"
{{- end }}

[data.path]
{{- if eq .chezmoi.os "darwin" }}
fzf_completion = "{{ $homebrewPrefix }}/opt/fzf/shell/completion.zsh"
fzf_key_bindings = "{{ $homebrewPrefix }}/opt/fzf/shell/key-bindings.zsh"
pyenv_completion = ""  # TODO
{{- else if eq $osid "linux-fedora" }}
fzf_completion = "/usr/share/zsh/site-functions/fzf"
fzf_key_bindings = "/usr/share/fzf/shell/key-bindings.zsh"
pyenv_completion = ""  # TODO
{{- else if or (eq $osid "linux-debian") (eq $osid "linux-ubuntu") }}
fzf_completion = "/usr/share/doc/fzf/examples/completion.zsh"
fzf_key_bindings = "/usr/share/doc/fzf/examples/key-bindings.zsh"
pyenv_completion = ""  # TODO
{{- else if eq $osid "linux-opensuse-tumbleweed" }}
fzf_completion = "/usr/share/zsh/site-functions/_fzf"
fzf_key_bindings = "/etc/zsh_completion.d/fzf-key-bindings"
pyenv_completion = ""  # TODO
{{- else }}
fzf_completion = "/usr/share/fzf/completion.zsh"
fzf_key_bindings = "/usr/share/fzf/key-bindings.zsh"
pyenv_completion = "/usr/share/zsh/site-functions/_pyenv"
{{- end }}
jetbrains_jre = ""

# vim: ft=toml
