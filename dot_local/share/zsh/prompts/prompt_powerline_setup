prompt_powerline_setup() {
# Vars {{{

CURRENT_BG=''
SEP=''
RSEP=''
GIT_UNSTAGED="✘"
GIT_STAGED="✔"

# Version Control System
branch_fmt="%c%u %b  "
action_fmt="%a"

zstyle ':vcs_info:*' unstagedstr "${GIT_UNSTAGED}"
zstyle ':vcs_info:*' stagedstr "${GIT_STAGED}"
zstyle ':vcs_info:*' formats "${branch_fmt}"
zstyle ':vcs_info:*' actionformats "${action_fmt}|${branch_fmt}"
zstyle ':vcs_info:(sv[nk]|bzr):*' branchformat '%b%F{1}:%F{3}%r'

unset branch_fmt action_fmt

# }}}

# Left Prompt {{{

prompt_segment() {
    if [[ ${CURRENT_BG} != '' && ${CURRENT_BG} != ${1} ]]; then
        sep=" %K{${1}}%F{${CURRENT_BG}}$SEP%F{$2}"
    else
        sep="%K{${1}}%F{${2}}"
    fi

    CURRENT_BG=$1

    echo -n "${sep} $3"
}

prompt_end() {
    if [[ -n "$CURRENT_BG" ]]; then
        echo -n " %k%F{$CURRENT_BG}${SEP}%f "
    else
        echo -n "%k%f"
    fi
    CURRENT_BG=''
}

prompt_vi_mode() {
    case "${KEYMAP:-main}" in
        main|viins)
            prompt_segment ${bright_green} ${black} "I"
            ;;
        vicmd)
            prompt_segment ${bright_red} ${black} "N"
            ;;
        *)
            echo "N/A"
            ;;
    esac
}

prompt_status() {
    local -a _status
    [[ $RETVAL -ne 0 ]] && _status+="✘"

    [[ -n "${_status}" ]] && prompt_segment ${black} ${red} "${_status}"
}

prompt_host() {
    if [[ -n "${SSH_CLIENT:-}" ]]; then
        fg="${bright_yellow}"
    else
        fg="${bright_green}"
    fi

    prompt_segment ${black} ${fg} "%n@%m"
}

prompt_dir() {
    fg="%(!.${bright_red}.${bright_green})"
    prompt_segment ${fg} ${black} "%1~"
}

build_ps1() {
    RETVAL=$?

    prompt_vi_mode
    prompt_status
    prompt_host
    prompt_dir
    prompt_end
}

PS1='$(build_ps1)'
PS2='> '

# }}}

# Right Prompt {{{

rprompt_segment() {
    if [[ ${CURRENT_BG} == '' ]]; then
        sep="%F{${1}}${RSEP}%K{${1}}%F{${2}}"
    elif [[ ${CURRENT_BG} != ${1} ]]; then
        sep=" %F{${1}}${RSEP}%K{${1}}%F{${2}}"
    else
        sep="%K{${1}}%F{${2}}"
    fi

    CURRENT_BG=$1

    echo -n "${sep} $3"
}

rprompt_end() {
    echo -n " %k%f"
    CURRENT_BG=''
}

prompt_git_action() {
    [[ -n "${vcs_action_msg}" ]] && rprompt_segment ${red} ${black} "${vcs_action_msg}"
}

prompt_git_branch() {
    [[ -z "${vcs_branch_msg}" ]] && return
    local bg
    if contains "${vcs_branch_msg}" "${GIT_STAGED}" || contains "${vcs_branch_msg}" "${GIT_UNSTAGED}"; then
        bg="${bright_yellow}"
    else
        bg="${bright_green}"
    fi

    rprompt_segment ${bg} ${black} "${vcs_branch_msg}"
}

prompt_venv() {
    # Show the prompt name if defined, otherwise, fallback to the basename of the venv's path
    [[ -n "${VIRTUAL_ENV:-}" ]] && rprompt_segment ${magenta} ${black} "${VIRTUAL_ENV_PROMPT:-${VIRTUAL_ENV##*/}}"
}

prompt_nvm() {
    # extract dirname -> basename
    [[ -n "${NVM_BIN:-}" ]] && rprompt_segment ${black} ${magenta} "node ${${NVM_BIN%/*}##*/}"
}

prompt_chezmoi() {
    [[ -n "${CHEZMOI_SUBSHELL:-}" ]] && rprompt_segment ${black} ${white} "Chezmoi"
}

prompt_shell_lvl() {
    ((lvl = ${SHLVL} - 1))
    [[ -n "${POETRY_ACTIVE:-}" ]] && ((lvl--))
    [[ "${CHEZMOI_SUBSHELL:-}" -eq 1 ]] && ((lvl--))
    [[ ${lvl} -gt 0 ]] && rprompt_segment ${red} ${black} "Subshell ${lvl}"
}

build_rprompt() {
    load_vcs_info

    prompt_shell_lvl
    prompt_nvm
    prompt_venv
    prompt_chezmoi
    prompt_git_action
    prompt_git_branch
    rprompt_end
}

RPROMPT='$(build_rprompt)'

# }}}
}

# vi: ft=zsh foldmethod=marker
