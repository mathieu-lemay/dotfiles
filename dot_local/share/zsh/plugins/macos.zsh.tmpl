HOMEBREW_PREFIX="{{ .homebrewPrefix }}"

if [[ -n "${SSH_AUTH_SOCK}" ]] && ! ssh-add -l &>/dev/null; then
    # Ensure the "primary" key is loaded first
    [[ -e ~/.ssh/id_ed25519 ]] && ssh-add --apple-use-keychain ~/.ssh/id_ed25519

    # Add the rest
    ssh-add --apple-load-keychain
fi

unquarantine() {
    if [ $# -lt 1 ]; then
        echo "No app(s) specified" >&2
        return 1
    fi

    xattr -r -d com.apple.quarantine "$@"
}

if [[ ! -d "${HOMEBREW_PREFIX}/bin" ]]; then
    return
fi

# Remove any homebrew path in PATH before re-adding them with higher priority
export PATH=$(echo -n "$PATH" | tr ':' '\n' | grep -E -v "^${HOMEBREW_PREFIX}/s?bin" | tr '\n' ':' | sed 's/:$//')

export PATH="${HOMEBREW_PREFIX}/bin${PATH+:$PATH}";
export PATH="${HOMEBREW_PREFIX}/sbin${PATH+:$PATH}";
export MANPATH="${HOMEBREW_PREFIX}/share/man${MANPATH+:$MANPATH}:";
export INFOPATH="${HOMEBREW_PREFIX}/share/info:${INFOPATH:-}";

# GNU utilities
for pkg in "coreutils" "findutils" "gnu-sed"; do
    gnubin="${HOMEBREW_PREFIX}/opt/${pkg}/libexec/gnubin"
    [[ -d "${gnubin}" ]] && export PATH="${gnubin}:${PATH}"
done

# Lib specific flags
for lib in 'openssl' 'zlib'; do
    lib_path="${HOMEBREW_PREFIX}/opt/${lib}"
    if [[ -d "${lib_path}" ]]; then
        export LDFLAGS="$LDFLAGS -L${lib_path}/lib"
        export CFLAGS="$CFLAGS -I${lib_path}/include"
        export PKG_CONFIG_PATH="${lib_path}/lib/pkgconfig:$PKG_CONFIG_PATH"
    fi
done

# Qt
QT_PATH="${HOMEBREW_PREFIX}/opt/qt"
if [[ -d "${QT_PATH}" ]]; then
    export CMAKE_PREFIX_PATH="${QT_PATH}:$CMAKE_PREFIX_PATH"
    export PATH="$PATH:${QT_PATH}/bin"
fi

# vim: ft=zsh
