#! /bin/zsh

set -euo pipefail

. ~/.local/lib/log.sh

plugin_name="${$(basename "$0")#"docker-"}"
cmd="${1:-}"
shift 1

force=0
noconfirm=0

plugin-metadata() {
    cat <<- EOF
	{
	  "SchemaVersion": "0.1.0",
	  "Vendor": "Mathieu Lemay",
	  "Version": "0.0.1",
	  "ShortDescription": "Apply actions on resources matching a regex",
	  "URL": "https://github.com/mathieu-lemay"
	}
	EOF
}

_select() {
    docker_cmd="${1}"
    docker_fmt="${2}"
    shift 2
    patterns="$@"

    grep_args=()
    for p in "${=patterns}"; do
        grep_args+=("-e" "${p}")
    done

    values=$(docker "${docker_cmd}" ls -a --format="${docker_fmt}" | grep "${grep_args[@]}" || true)

    echo "${values}"
}

cmd-rm() {
    local containers

    [[ $# -lt 1 ]] && fatal "No pattern specified"

    containers=$(_select container "{{.Names}}" "$@")

    if [[ -z "${containers}" ]]; then
        echo "Nothing to delete"
        return 0
    fi

    echo "Containers:"
    for i in "${=containers}"; do
        echo "  $i"
    done

    if [[ -n "${noconfirm:-}" ]] || prompt-confirmation "Delete containers" "y"; then
        echo "${containers}" | xargs docker rm "${force}"
    fi
}

cmd-rmi() {
    local images

    [[ $# -lt 1 ]] && fatal "No pattern specified"

    images=$(_select image "{{.Repository}}:{{.Tag}}" "$@")

    if [[ -z "${images}" ]]; then
        echo "Nothing to delete"
        return 0
    fi

    echo "Images:"
    for i in "${=images}"; do
        echo "  $i"
    done

    if [[ -n "${noconfirm:-}" ]] || prompt-confirmation "Delete images" "y"; then
        echo "${images}" | xargs docker rmi
    fi
}

cmd-kill() {
    local select_pattern containers

    [[ $# -lt 1 ]] && fatal "No pattern specified"

    containers=$(_select container "{{.Names}}" "$@")

    if [[ -z "${containers}" ]]; then
        echo "Nothing to kill"
        return 0
    fi

    echo "Containers:"
    for i in "${=containers}"; do
        echo "  $i"
    done

    if [[ -n "${noconfirm:-}" ]] || prompt-confirmation "Kill containers" "y"; then
        echo "${containers}" | xargs docker kill
    fi
}

main() {
    [[ $# -lt 1 ]] && fatal "Usage: docker ${plugin_name} cmd [options]"

    zparseopts -D -E - f=force -force=force -noconfirm=noconfirm

    local cmd="${1}"
    shift

    case "${cmd}" in
        rm)
            cmd-rm "$@"
            ;;
        rmi)
            cmd-rmi "$@"
            ;;
        "kill")
            cmd-kill "$@"
            ;;
        *)
            fatal "Invalid command: ${cmd}"
            ;;
    esac

}


case "${cmd}" in
    "${plugin_name}")
        main "$@"
        ;;
    "docker-cli-plugin-metadata")
        plugin-metadata
        ;;
    *)
        fatal "Invalid command: ${cmd}"
        ;;
esac
